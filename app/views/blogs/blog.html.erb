<link href='/stylesheets/blogs.css' rel="stylesheet" type="text/css" />
<div class="blog">
 <div id="header-bar" class="header-bar">
  <div class="container" style="font-size: 1.500rem;">
   <div class="back-home">
     <p>
       Back to <a href="#">Our website</a>
     </p>
   </div>
    <div class="logo">
        <a href="/blogs">Block Home Page</a>
    </div>
    <div class="twitter-box">

    </div>
  </div>
 </div>
  <div class="blog-section">
    <div class="container">
      <article>
         <header>
            <h1>
              <a href="#">Authentication with Rails, JWT and ReactJS</a>
            </h1>
           <h6>
             <span>March 13, 2015</span> by Andrea Pavoni in rails, javascript, react
           </h6>
         </header>
        <div class="index-summary" data-url="/blog/authentication-with-rails-jwt-and-react/">
          <p>Here at Nebulab we love to hack with new exciting technologies, that’s why we dedicate 20% of our work time for study and open source contribution. In this post we’ll cover authentication made with Rails,
            <a href="//jwt.io/">JSON Web Tokens</a> and <a href="https://facebook.github.io/react/">ReactJS</a>.
          </p>
        </div>
      </article>
      <article>
        <header>
          <h1>
            <a href="#">Installing Devise Invitable on Spree</a>
          </h1>
          <h6>
            <span>September 8, 2014</span> by Alessio Rocco in web development, spree
          </h6>
        </header>
        <div class="index-summary" data-url="/blog/installing-devise-invitable-on-spree/">
          <p>Usually it’s easy to add a gem (not an extension) to Spree but sometimes things can get a little rough,
            <a href="https://github.com/scambra/devise_invitable">devise_invitable</a> is just like that,
            at first it might seem easy to install, but that’s not true, follow us to see how we have installed this good gem on Spree commerce.
          </p>
          <p></p>
        </div>
      </article>
      <article>
        <header>
          <h1>
            <a href="#">Using npm like Bundler</a>
          </h1>
          <h6>
            <span>July 1, 2014</span> by Matteo Latini in web development, javascript
          </h6>
        </header>
        <div class="index-summary" data-url="/blog/using-npm-like-bundler/">
          <p>Coming from a <em>Ruby and Rails</em> background, we’ve always found very strange how nowadays most JavaScript libraries that require
            <em>Node Packaged Modules</em> recommend some dependencies to be installed globally one by one. As Ruby developers that always felt strange to us.
            We’ll see how to use <a href="https://www.npmjs.org">npm</a> like we use
            <a href="//bundler.io">Bundler</a>.
          </p>
          <p></p>
        </div>
      </article>
      <article>
        <header>
          <h1>
            <a href="#">Using Ember.js with Spree</a>
          </h1>
          <h6>
            <span>February 4, 2014</span> by Matteo Latini in web development, ember
          </h6>
        </header>
        <div class="index-summary" data-url="/blog/using-ember-js-with-spree/">
          <p>
            <a href="#"><img alt="Ember.js with Spree" src="/images/emberjs_spree.jpg"></a>
            For some time we’ve been wondering what would it be like to integrate Ember.js with a Spree Ecommerce application. In this post we’ll see how to create a simple Ember.js
            application that serves data from a Spree API endpoint.
          </p>
          <p>

          </p>
        </div>
      </article>
      <article>
        <header>
          <h1>
            <a href="#">Our Ember.js Toolchain</a>
          </h1>
          <h6>
            <span>January 22, 2014</span> by Matteo Latini in web development, ember
          </h6>
        </header>
        <div class="index-summary" data-url="/blog/our-ember-js-toolchain/">
          <p>
            <a href="#"><img alt="Ember Hamster" src="/images/ember1.png">
            </a> Now that we’ve been working with Ember.js for a while, we wanted to give a quick update on what we found works out for us while working with it,
            both client and server side. We thought this post would be useful since we initially had some problems finding the right tools but now we really feel we found the right toolchain.
          </p>
          <p>

          </p>
        </div>
      </article>
    </div>
  </div>
</div>